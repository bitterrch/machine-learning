# -*- coding: utf-8 -*-
"""Lab1, 1373, НовиковаАС.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yjSbVtnuO0gQjTOA8lmror0LUHfcX4Mh

1. Данные о ценах и объеме продаж авокадо на нескольких рынках США. Датасет был взят с сайта www.kaggle.com. Все данные реальны, они были загружены с веб-сайта The Hass Avocado Board в мае 2018 года.
2. Все данные в датасете - числовые. В датасете представлены следующие атрибуты:
 - AveragePrice - средняя цена за авокадо
 - Total Volume - сколько всего авокадо продано
 - 4046 - продажи авокадо с кодом 4046
 - 4225 - продажи авокадо с кодом 4225
 - 4770 - продажи авокадо с кодом 4770
 - Total Bags - сколько всего упаковок авокадо продано
 - Small Bags - сколько маленьких упаковок авокадо продано
 - Large Bags - сколько больших упаковок авокадо продано
 - XLarge Bags - сколько очень больших упаковок авокадо продано
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('avocado.csv')
df.head()

def findOutliers(arr, outliers):
  sorted = np.sort(arr)
  q1 = np.ceil(25/100*len(sorted))
  q3 = np.ceil(75/100*len(sorted))
  iqr = q3-q1

  threshold1 = sorted[int(q1)]-1.5*sorted[int(iqr)]
  threshold2 = sorted[int(q3)]+1.5*sorted[int(iqr)]

  i = 0
  while sorted[i] < threshold1:
    outliers.append(sorted[i])
    i += 1

  i = -1
  while threshold2 < sorted[i]:
    outliers.append(sorted[i])
    i -= 1

  return outliers

#средняя цена за авокадо
avgPrice = np.array(df['AveragePrice'])
avgPriceMean = avgPrice.mean()
print('Среднее значение: ' + str(avgPriceMean))

avgPriceSko = np.std(avgPrice)
print('СКО: ' + str(avgPriceSko))

plt.figure(figsize=(10, 5))
plt.hist(df['AveragePrice'], bins=30);
plt.grid(True)
plt.title('Average price distribution')

print('Пропущенные значения: ' + str(df['AveragePrice'].isna().sum()))

apOutliers = []

print('Выбросы: ')
print(findOutliers(avgPrice, apOutliers))

#сколько всего авокадо продано
totalVolume = np.array(df['Total Volume'])
totalVolumeMean = totalVolume.mean()
print('Среднее значение: ' + str(totalVolume.mean()))

totalVolumeSko = np.std(totalVolume)
print('СКО: ' + str(totalVolumeSko))

plt.figure(figsize=(10, 5))
plt.hist(df['Total Volume'], bins=30);
plt.grid(True)
plt.title('Total Volume distribution')

print('Пропущенные значения: ' + str(df['Total Volume'].isna().sum()))

tvOutliers = []

print('Выбросы: ')
print(findOutliers(totalVolume, tvOutliers))

#сколько продано авокадо с кодом 4046
plu4046 = np.array(df['4046'])
plu4046Mean = plu4046.mean()
print('Среднее значение: ' + str(plu4046Mean))

plu4046Sko = np.std(plu4046)
print('СКО: ' + str(plu4046Sko))

plt.figure(figsize=(10, 5))
plt.hist(df['4046'], bins=30);
plt.grid(True)
plt.title('Total number of avocados with PLU 4046 sold distribution')

print('Пропущенные значения: ' + str(df['4046'].isna().sum()))

plu4046Outliers = []

print('Выбросы: ')
print(findOutliers(plu4046, plu4046Outliers))

#сколько продано авокадо с кодом 4225
plu4225 = np.array(df['4225'])
plu4225Mean = plu4225.mean()
print('Среднее значение: ' + str(plu4225Mean))

plu4225Sko = np.std(plu4225)
print('СКО: ' + str(plu4225Sko))

plt.figure(figsize=(10, 5))
plt.hist(df['4225'], bins=30);
plt.grid(True)
plt.title('Total number of avocados with PLU 4225 sold distribution')

print('Пропущенные значения: ' + str(df['4225'].isna().sum()))

plu4225Outliers = []

print('Выбросы: ')
print(findOutliers(plu4225, plu4225Outliers))

#сколько продано авокадо с кодом 4770
plu4770 = np.array(df['4770'])
plu4770Mean = plu4770.mean()
print('Среднее значение: ' + str(plu4770Mean))

plu4770Sko = np.std(plu4770)
print('СКО: ' + str(plu4770Sko))

plt.figure(figsize=(10, 5))
plt.hist(df['4770'], bins=30);
plt.grid(True)
plt.title('Total number of avocados with PLU 4770 sold distribution')

print('Пропущенные значения: ' + str(df['4770'].isna().sum()))

plu4770Outliers = []

print('Выбросы: ')
print(findOutliers(plu4770, plu4770Outliers))

#сколько всего упаковок продано
totalBags = np.array(df['Total Bags'])
totalBagsMean = totalBags.mean()
print('Среднее значение: ' + str(totalBagsMean))

totalBagsSko = np.std(totalBags)
print('СКО: ' + str(totalBagsSko))

plt.figure(figsize=(10, 5))
plt.hist(df['Total Bags'], bins=30);
plt.grid(True)
plt.title('Total Bags distribution')

print('Пропущенные значения: ' + str(df['Total Bags'].isna().sum()))

tbOutliers = []

print('Выбросы: ')
print(findOutliers(totalBags, tbOutliers))

#сколько маленьких упаковок продано
smallBags = np.array(df['Small Bags'])
smallBagsMean = smallBags.mean()
print('Среднее значение: ' + str(smallBagsMean))

smallBagsSko = np.std(smallBags)
print('СКО: ' + str(smallBagsSko))

plt.figure(figsize=(10, 5))
plt.hist(df['Small Bags'], bins=30);
plt.grid(True)
plt.title('Small Bags distribution')

print('Пропущенные значения: ' + str(df['Small Bags'].isna().sum()))

sbOutliers = []

print('Выбросы: ')
print(findOutliers(smallBags, sbOutliers))

#сколько больших упаковок продано
largeBags = np.array(df['Large Bags'])
largeBagsMean = largeBags.mean()
print('Среднее значение: ' + str(largeBagsMean))

largeBagsSko = np.std(largeBags)
print('СКО: ' + str(largeBagsSko))

plt.figure(figsize=(10, 5))
plt.hist(df['Large Bags'], bins=30);
plt.grid(True)
plt.title('Large Bags distribution')

print('Пропущенные значения: ' + str(df['Large Bags'].isna().sum()))

lbOutliers = []

print('Выбросы: ')
print(findOutliers(largeBags, lbOutliers))

#сколько очень больших упаковок продано
xlargeBags = np.array(df['XLarge Bags'])
xlargeBagsMean = xlargeBags.mean()
print('Среднее значение: ' + str(xlargeBagsMean))

xlargeBagsSko = np.std(xlargeBags)
print('СКО: ' + str(xlargeBagsSko))

plt.figure(figsize=(10, 5))
plt.hist(df['XLarge Bags'], bins=30);
plt.grid(True)
plt.title('XLarge Bags distribution')

print('Пропущенные значения: ' + str(df['XLarge Bags'].isna().sum()))

xbOutliers = []

print('Выбросы: ')
print(findOutliers(xlargeBags, xbOutliers))

#зависимость средней цены за авокадо от общих продаж
corrCoef1 = np.corrcoef(avgPrice, totalVolume)
print('Матрица корелляции: ')
print(corrCoef1)

plt.figure(figsize=(10, 5));
plt.scatter(df['AveragePrice'], df['Total Volume']);
plt.xlabel('Average Price');
plt.ylabel('Total Volume');
plt.title('Dependence of average price on total volume');

#зависимость продаж авокадо с кодом 4046 от продаж авокадо с кодом 4770
corrCoef2 = np.corrcoef(plu4046, plu4770)
print('Матрица корелляции: ')
print(corrCoef2)

plt.figure(figsize=(10, 5));
plt.scatter(df['4046'], df['4770']);
plt.xlabel('PLU 4046');
plt.ylabel('PLU 4770');
plt.title('Dependence of avocado with PLU 4046 sales on avocado with PLU 4770 sales');

#зависимость продаж маленьких упаковок от продаж авокадо с кодом 4225
corrCoef3 = np.corrcoef(smallBags, plu4225)
print('Матрица корелляции: ')
print(corrCoef3)

plt.figure(figsize=(10, 5));
plt.scatter(df['Small Bags'], df['4225']);
plt.xlabel('Small Bags');
plt.ylabel('PLU 4225');
plt.title('Dependence of small bags sales on avocado with PLU 4225 sales');

#зависимость продаж очень больших упаковов от средней цены за авокадо
corrCoef4 = np.corrcoef(xlargeBags, avgPrice)
print('Матрица корелляции: ')
print(corrCoef4)

plt.figure(figsize=(10, 5));
plt.scatter(df['XLarge Bags'], df['AveragePrice']);
plt.xlabel('XLarge Bags');
plt.ylabel('Average Price');
plt.title('Dependence of xlarge bags sales on average price');

#зависимость продаж маленьких упаковок от продаж больших упаковов
corrCoef5 = np.corrcoef(largeBags, smallBags)
print('Матрица корелляции: ')
print(corrCoef5)

plt.figure(figsize=(10, 5));
plt.scatter(df['Large Bags'], df['Small Bags']);
plt.xlabel('Large Bags');
plt.ylabel('Small Bags');
plt.title('Dependence of large bags sales on small bags sales');